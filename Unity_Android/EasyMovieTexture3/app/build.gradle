apply plugin: 'com.android.library'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk.abiFilters 'armeabi-v7a', 'x86'
        ndk.moduleName = "BlueDoveMediaRender"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


}


repositories {
    flatDir {
        dirs 'libs'
    }
}


dependencies {
    //classpath 'com.android.tools.build:gradle:3.1.2'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation files('..\\zip_file.jar')

    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    implementation name: 'FDLivePlayerLib-release', ext: 'aar'
    //implementation project(':FDLivePlayerLib-release')
}


// 기존 플러그인을 삭제.
task deleteObjectJar(type: Delete){
    delete 'release/EasyMovieTexture.jar'
    delete '../../../Unity/4DR/Assets/Plugins/Android/EasyMovieTexture.jar'
}

// from 경로에 위치한 class결과물을 release 폴더에 AndroidPlugin.jar이름으로 위치.
task exportJar(type: Copy){
    from('build/intermediates/packaged-classes/release/')
    into('release/')
    into('../../../Unity/4DR/Assets/Plugins/Android')
    include('classes.jar')
    rename('classes.jar', 'EasyMovieTexture.jar')
}

// exportJar 실행시 deleteObjectJar가 실행되도록 의존성 연결.
exportJar.dependsOn(deleteObjectJar, build)